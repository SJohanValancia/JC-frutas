const fs = require('fs');
const path = require('path');

// RUTAS CONFIGURADAS PARA TU PROYECTO CAPACITOR
const APK_PATH = './android/app/build/outputs/apk/debug/app-debug.apk';
const INSTALLER_HTML = './www/instalador.html';
const WEB_APK_PATH = './www/app-debug.apk';

function getFileSize(filePath) {
    try {
        const stats = fs.statSync(filePath);
        const fileSizeInBytes = stats.size;
        const fileSizeInMB = (fileSizeInBytes / (1024 * 1024)).toFixed(1);
        return `${fileSizeInMB} MB`;
    } catch (error) {
        console.log('‚ö†Ô∏è  No se pudo obtener el tama√±o del archivo');
        return '~25 MB';
    }
}

function getCurrentVersion() {
    const now = new Date();
    const day = String(now.getDate()).padStart(2, '0');
    const month = String(now.getMonth() + 1).padStart(2, '0');
    const year = now.getFullYear();
    const hours = String(now.getHours()).padStart(2, '0');
    const minutes = String(now.getMinutes()).padStart(2, '0');
    
    return `Versi√≥n ${day}/${month}/${year} - ${hours}:${minutes}`;
}

function updateInstaller() {
    console.log('üîÑ Actualizando instalador...');
    console.log('üìç Buscando APK en:', APK_PATH);
    
    // Verificar que existe la APK de Capacitor
    if (!fs.existsSync(APK_PATH)) {
        console.error('‚ùå APK no encontrada en:', APK_PATH);
        console.log('üí° Aseg√∫rate de compilar primero con: npx cap build android');
        return false;
    }
    
    // Copiar APK al directorio web
    try {
        fs.copyFileSync(APK_PATH, WEB_APK_PATH);
        console.log('‚úÖ APK copiada desde Capacitor al directorio web');
    } catch (error) {
        console.error('‚ùå Error al copiar APK:', error.message);
        return false;
    }
    
    // Obtener informaci√≥n del archivo
    const fileSize = getFileSize(WEB_APK_PATH);
    const version = getCurrentVersion();
    
    console.log(`üìä Tama√±o del APK: ${fileSize}`);
    console.log(`üè∑Ô∏è  Nueva versi√≥n: ${version}`);
    
    // Verificar que existe instalador.html
    if (!fs.existsSync(INSTALLER_HTML)) {
        console.error('‚ùå No se encontr√≥ instalador.html');
        console.log('üí° Aseg√∫rate de guardar el HTML como "instalador.html"');
        return false;
    }
    
    // Leer el contenido del instalador
    let htmlContent = fs.readFileSync(INSTALLER_HTML, 'utf8');
    
    // Nueva configuraci√≥n actualizada
    const newConfig = `        // ===== CONFIGURACI√ìN DE LA APLICACI√ìN =====
        // Esta configuraci√≥n se actualiza autom√°ticamente con el script
        const APP_CONFIG = {
            name: "Mi Aplicaci√≥n",
            version: "${version}",
            description: "Una aplicaci√≥n incre√≠ble que transformar√° tu experiencia digital. Desc√°rgala ahora y disfruta de todas sus caracter√≠sticas √∫nicas.",
            fileName: "app-debug.apk",
            fileSize: "${fileSize}",
            logoEmoji: "üì±",
            downloadUrl: "./app-debug.apk" // Se actualiza autom√°ticamente al path correcto
        };`;
    
    // Buscar y reemplazar la configuraci√≥n existente
    const configRegex = /        \/\/ ===== CONFIGURACI√ìN DE LA APLICACI√ìN =====[\s\S]*?        };/;
    
    if (configRegex.test(htmlContent)) {
        htmlContent = htmlContent.replace(configRegex, newConfig);
        
        // Guardar el archivo actualizado
        fs.writeFileSync(INSTALLER_HTML, htmlContent, 'utf8');
        console.log('‚úÖ instalador.html actualizado correctamente');
        console.log(`üöÄ Archivos listos para subir al servidor:`);
        console.log(`   üìÑ instalador.html`);
        console.log(`   üì± app-debug.apk (${fileSize})`);
        console.log('');
        console.log('üîó El instalador ahora apunta a: ./app-debug.apk');
        return true;
    } else {
        console.error('‚ùå No se encontr√≥ la secci√≥n de configuraci√≥n en instalador.html');
        console.log('üí° Verifica que el HTML tenga la estructura correcta');
        return false;
    }
}

// Ejecutar la funci√≥n principal
if (updateInstaller()) {
    console.log('üéâ ¬°Proceso completado exitosamente!');
} else {
    console.log('üí• Hubo errores en el proceso');
    process.exit(1);
}